//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 gWorldViewProj;            // Offset:    0, size:   64
    float   sTime;                      // Offset:   64, size:    4
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 ColorTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldViewProj;           // Offset:    0 Size:    64
                //   float sTime;                       // Offset:   64 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.Pos.x; v0.y <- vin.Pos.y; v0.z <- vin.Pos.z; 
                //   v1.x <- vin.Color.x; v1.y <- vin.Color.y; v1.z <- vin.Color.z; v1.w <- vin.Color.w; 
                //   o1.x <- <VS return value>.Color.x; o1.y <- <VS return value>.Color.y; o1.z <- <VS return value>.Color.z; o1.w <- <VS return value>.Color.w; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 32 "D:\Year 3\Graphics Programming\GIT\Graphics programming\LunaCh1_10\Chapter 6 Drawing in Direct3D\Hills\FX\color.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosH.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosH.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosH.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- vout.PosH.w
                
                #line 35
                mov r0.xyzw, v1.xyzw  // r0.x <- vout.Color.x; r0.y <- vout.Color.y; r0.z <- vout.Color.z; r0.w <- vout.Color.w
                mov o0.xyzw, r1.xyzw
                mov o1.xyzw, r0.xyzw
                ret 
                // Approximately 10 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldViewProj;           // Offset:    0 Size:    64 [unused]
                //   float sTime;                       // Offset:   64 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xy  
                // COLOR                    0   xyzw        1     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[5], immediateIndexed
                dcl_input_ps_siv linear noperspective v0.xy, position
                dcl_output o0.xyzw
                dcl_temps 10
                //
                // Initial variable locations:
                //   v0.x <- fragCoord.PosH.x; v0.y <- fragCoord.PosH.y; v0.z <- fragCoord.PosH.z; v0.w <- fragCoord.PosH.w; 
                //   v1.x <- fragCoord.Color.x; v1.y <- fragCoord.Color.y; v1.z <- fragCoord.Color.z; v1.w <- fragCoord.Color.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 89 "D:\Year 3\Graphics Programming\GIT\Graphics programming\LunaCh1_10\Chapter 6 Drawing in Direct3D\Hills\FX\color.fx"
                mov r0.x, cb0[4].x  // r0.x <- iGlobalTime
                itof r0.yz, l(0, 800, 600, 0)  // r0.y <- iResolution.x; r0.z <- iResolution.y
                mul r1.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
                div r1.xy, r1.xyxx, r0.yzyy
                add r1.xy, r1.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)  // r1.x <- v.x; r1.y <- v.y
                div r0.y, r0.y, r0.z
                mul r0.y, r0.y, r1.x  // r0.y <- v.x
                mov r1.xzw, l(0,0,-2.000000,4.000000)  // r1.x <- org.x; r1.z <- org.y; r1.w <- org.z
                mul r2.x, r0.y, l(1.600000)
                mov r2.y, -r1.y
                mov r2.z, l(-1.500000)
                dp3 r0.y, r2.xyzx, r2.xyzx
                rsq r0.y, r0.y
                mul r0.yzw, r0.yyyy, r2.xxyz  // r0.y <- dir.x; r0.z <- dir.y; r0.w <- dir.z
                nop 
                mov r1.xzw, r1.xxzw
                mov r0.yzw, r0.yyzw
                
                #line 68
                mov r1.y, l(0)  // r1.y <- glow
                mov r2.x, l(0.020000)  // r2.x <- eps
                mov r1.xzw, r1.xxzw  // r1.x <- p.x; r1.z <- p.y; r1.w <- p.z
                mov r2.y, l(0)  // r2.y <- glowed
                mov r2.z, l(0)  // r2.z <- i
                mov r3.xz, r1.xxwx  // r3.x <- p.x; r3.z <- p.z
                mov r4.x, r1.y  // r4.x <- glow
                mov r4.y, r1.z  // r4.y <- p.y
                mov r2.w, r2.y  // r2.w <- glowed
                mov r3.w, r2.z  // r3.w <- i
                loop 
                  ilt r4.z, r3.w, l(64)
                  breakc_z r4.z
                  nop 
                  mov r5.xz, r3.xxzx
                  mov r5.y, r4.y
                
                #line 63
                  dp3 r4.z, r5.xyzx, r5.xyzx
                  sqrt r4.z, r4.z
                  mov r4.z, -r4.z
                  add r4.z, r4.z, l(100.000000)
                  nop 
                  mov r5.xyz, r5.xyzx
                
                #line 57
                  nop 
                  mul r6.xyz, r5.xyzx, l(1.000000, 0.500000, 1.000000, 0.000000)
                  mov r7.xyzw, l(0,-1.000000,0,1.000000)
                
                #line 52
                  mov r6.xyz, -r6.xyzx
                  add r6.xyz, r6.xyzx, r7.xyzx
                  dp3 r4.w, r6.xyzx, r6.xyzx
                  sqrt r4.w, r4.w
                  mov r5.w, -r7.w
                  add r4.w, r4.w, r5.w  // r4.w <- <sphere return value>
                
                #line 57
                  mov r4.w, r4.w  // r4.w <- d
                  nop 
                  mul r6.y, r0.x, l(2.000000)
                  mov r6.xz, l(0,0,0,0)
                  add r6.xyz, r5.xyzx, r6.xyzx
                
                #line 42
                  round_ni r7.xyz, r6.xyzx  // r7.x <- i.x; r7.y <- i.y; r7.z <- i.z
                  dp3 r5.w, r7.xyzx, l(1.000000, 57.000000, 21.000000, 0.000000)
                  add r8.xyzw, r5.wwww, l(0.000000, 57.000000, 21.000000, 78.000000)  // r8.x <- a.x; r8.y <- a.y; r8.z <- a.z; r8.w <- a.w
                  mov r7.xyz, -r7.xyzx
                  add r6.xyz, r6.xyzx, r7.xyzx
                  mul r6.xyz, r6.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
                  sincos null, r6.xyz, r6.xyzx
                  mul r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
                  add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r6.x <- f.x; r6.y <- f.y; r6.z <- f.z
                  sincos null, r7.xyzw, r8.xyzw
                  mul r7.xyzw, r8.xyzw, r7.xyzw
                  sincos r7.xyzw, null, r7.xyzw
                  add r9.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                  sincos null, r9.xyzw, r9.xyzw
                  add r8.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                  mul r8.xyzw, r8.xyzw, r9.xyzw
                  sincos r8.xyzw, null, r8.xyzw
                  mov r9.xyzw, -r7.xyzw
                  add r8.xyzw, r8.xyzw, r9.xyzw
                  mul r8.xyzw, r6.xxxx, r8.xyzw
                  add r7.xyzw, r7.xyzw, r8.xyzw  // r7.x <- a.x; r7.y <- a.y; r7.z <- a.z; r7.w <- a.w
                  mov r6.xw, -r7.xxxz
                  add r6.xw, r6.xxxw, r7.yyyw
                  mul r6.xy, r6.xwxx, r6.yyyy
                  add r6.xy, r6.xyxx, r7.xzxx  // r6.x <- a.x; r6.y <- a.y
                  mov r5.w, -r6.x
                  add r5.w, r5.w, r6.y
                  mul r5.w, r5.w, r6.z
                  add r5.w, r5.w, r6.x  // r5.w <- <noise return value>
                
                #line 58
                  nop 
                  mul r6.xyz, r5.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
                
                #line 42
                  round_ni r7.xyz, r6.xyzx  // r7.x <- i.x; r7.y <- i.y; r7.z <- i.z
                  dp3 r5.x, r7.xyzx, l(1.000000, 57.000000, 21.000000, 0.000000)
                  add r8.xyzw, r5.xxxx, l(0.000000, 57.000000, 21.000000, 78.000000)  // r8.x <- a.x; r8.y <- a.y; r8.z <- a.z; r8.w <- a.w
                  mov r7.xyz, -r7.xyzx
                  add r6.xyz, r6.xyzx, r7.xyzx
                  mul r6.xyz, r6.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
                  sincos null, r6.xyz, r6.xyzx
                  mul r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
                  add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r6.x <- f.x; r6.y <- f.y; r6.z <- f.z
                  sincos null, r7.xyzw, r8.xyzw
                  mul r7.xyzw, r8.xyzw, r7.xyzw
                  sincos r7.xyzw, null, r7.xyzw
                  add r9.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                  sincos null, r9.xyzw, r9.xyzw
                  add r8.xyzw, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                  mul r8.xyzw, r8.xyzw, r9.xyzw
                  sincos r8.xyzw, null, r8.xyzw
                  mov r9.xyzw, -r7.xyzw
                  add r8.xyzw, r8.xyzw, r9.xyzw
                  mul r8.xyzw, r6.xxxx, r8.xyzw
                  add r7.xyzw, r7.xyzw, r8.xyzw  // r7.x <- a.x; r7.y <- a.y; r7.z <- a.z; r7.w <- a.w
                  mov r5.xz, -r7.xxzx
                  add r5.xz, r5.xxzx, r7.yywy
                  mul r5.xz, r5.xxzx, r6.yyyy
                  add r5.xz, r5.xxzx, r7.xxzx  // r5.x <- a.x; r5.z <- a.y
                  mov r6.x, -r5.x
                  add r5.z, r5.z, r6.x
                  mul r5.z, r5.z, r6.z
                  add r5.x, r5.z, r5.x  // r5.x <- <noise return value>
                
                #line 58
                  mul r5.x, r5.x, l(0.500000)
                  add r5.x, r5.x, r5.w
                  mul r5.x, r5.x, l(0.250000)
                  mul r5.x, r5.y, r5.x
                  add r4.w, r4.w, r5.x  // r4.w <- <flame return value>
                
                #line 63
                  mov r5.x, -r4.w
                  max r4.w, r4.w, r5.x
                  min r4.z, r4.w, r4.z  // r4.z <- <scene return value>
                
                #line 74
                  add r4.z, r2.x, r4.z  // r4.z <- d
                  mul r5.xyz, r0.yzwy, r4.zzzz
                  mov r3.y, r4.y
                  add r3.xyz, r5.xyzx, r3.xyzx  // r3.y <- p.y
                  lt r4.z, r2.x, r4.z
                  if_nz r4.z
                    nop 
                    mov r3.xyz, r3.xyzx
                
                #line 57
                    nop 
                    mul r5.xyz, r3.xyzx, l(1.000000, 0.500000, 1.000000, 0.000000)
                    mov r6.xyzw, l(0,-1.000000,0,1.000000)
                
                #line 52
                    mov r5.xyz, -r5.xyzx
                    add r5.xyz, r5.xyzx, r6.xyzx
                    dp3 r4.z, r5.xyzx, r5.xyzx
                    sqrt r4.z, r4.z
                    mov r4.w, -r6.w
                    add r4.z, r4.w, r4.z  // r4.z <- <sphere return value>
                
                #line 57
                    mov r4.z, r4.z  // r4.z <- d
                    nop 
                    mul r5.y, r0.x, l(2.000000)
                    mov r5.xz, l(0,0,0,0)
                    add r5.xyz, r3.xyzx, r5.xyzx
                
                #line 42
                    round_ni r6.xyz, r5.xyzx  // r6.x <- i.x; r6.y <- i.y; r6.z <- i.z
                    dp3 r4.w, r6.xyzx, l(1.000000, 57.000000, 21.000000, 0.000000)
                    add r7.xyzw, r4.wwww, l(0.000000, 57.000000, 21.000000, 78.000000)  // r7.x <- a.x; r7.y <- a.y; r7.z <- a.z; r7.w <- a.w
                    mov r6.xyz, -r6.xyzx
                    add r5.xyz, r5.xyzx, r6.xyzx
                    mul r5.xyz, r5.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
                    sincos null, r5.xyz, r5.xyzx
                    mul r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
                    add r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r5.x <- f.x; r5.y <- f.y; r5.z <- f.z
                    sincos null, r6.xyzw, r7.xyzw
                    mul r6.xyzw, r7.xyzw, r6.xyzw
                    sincos r6.xyzw, null, r6.xyzw
                    add r8.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                    sincos null, r8.xyzw, r8.xyzw
                    add r7.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                    mul r7.xyzw, r7.xyzw, r8.xyzw
                    sincos r7.xyzw, null, r7.xyzw
                    mov r8.xyzw, -r6.xyzw
                    add r7.xyzw, r7.xyzw, r8.xyzw
                    mul r7.xyzw, r5.xxxx, r7.xyzw
                    add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- a.x; r6.y <- a.y; r6.z <- a.z; r6.w <- a.w
                    mov r5.xw, -r6.xxxz
                    add r5.xw, r5.xxxw, r6.yyyw
                    mul r5.xy, r5.xwxx, r5.yyyy
                    add r5.xy, r5.xyxx, r6.xzxx  // r5.x <- a.x; r5.y <- a.y
                    mov r4.w, -r5.x
                    add r4.w, r4.w, r5.y
                    mul r4.w, r4.w, r5.z
                    add r4.w, r4.w, r5.x  // r4.w <- <noise return value>
                
                #line 58
                    nop 
                    mul r5.xyz, r3.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
                
                #line 42
                    round_ni r6.xyz, r5.xyzx  // r6.x <- i.x; r6.y <- i.y; r6.z <- i.z
                    dp3 r5.w, r6.xyzx, l(1.000000, 57.000000, 21.000000, 0.000000)
                    add r7.xyzw, r5.wwww, l(0.000000, 57.000000, 21.000000, 78.000000)  // r7.x <- a.x; r7.y <- a.y; r7.z <- a.z; r7.w <- a.w
                    mov r6.xyz, -r6.xyzx
                    add r5.xyz, r5.xyzx, r6.xyzx
                    mul r5.xyz, r5.xyzx, l(3.141593, 3.141593, 3.141593, 0.000000)
                    sincos null, r5.xyz, r5.xyzx
                    mul r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
                    add r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r5.x <- f.x; r5.y <- f.y; r5.z <- f.z
                    sincos null, r6.xyzw, r7.xyzw
                    mul r6.xyzw, r7.xyzw, r6.xyzw
                    sincos r6.xyzw, null, r6.xyzw
                    add r8.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                    sincos null, r8.xyzw, r8.xyzw
                    add r7.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                    mul r7.xyzw, r7.xyzw, r8.xyzw
                    sincos r7.xyzw, null, r7.xyzw
                    mov r8.xyzw, -r6.xyzw
                    add r7.xyzw, r7.xyzw, r8.xyzw
                    mul r7.xyzw, r5.xxxx, r7.xyzw
                    add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- a.x; r6.y <- a.y; r6.z <- a.z; r6.w <- a.w
                    mov r5.xw, -r6.xxxz
                    add r5.xw, r5.xxxw, r6.yyyw
                    mul r5.xy, r5.xwxx, r5.yyyy
                    add r5.xy, r5.xyxx, r6.xzxx  // r5.x <- a.x; r5.y <- a.y
                    mov r5.w, -r5.x
                    add r5.y, r5.w, r5.y
                    mul r5.y, r5.y, r5.z
                    add r5.x, r5.y, r5.x  // r5.x <- <noise return value>
                
                #line 58
                    mul r5.x, r5.x, l(0.500000)
                    add r4.w, r4.w, r5.x
                    mul r4.w, r4.w, l(0.250000)
                    mul r4.w, r3.y, r4.w
                    add r4.z, r4.w, r4.z  // r4.z <- <flame return value>
                
                #line 78
                    lt r4.z, r4.z, l(0.000000)
                    if_nz r4.z
                      mov r2.w, l(-1)
                    endif 
                    if_nz r2.w
                      itof r4.z, r3.w
                      div r4.x, r4.z, l(64.000000)
                    endif 
                  endif 
                  iadd r3.w, r3.w, l(1)
                  mov r4.y, r3.y  // r4.y <- p.y
                endloop   // r3.x <- p.x; r3.z <- p.z
                mov r4.y, r4.y  // r4.y <- <raymarch return value>.y
                mov r4.x, r4.x  // r4.x <- <raymarch return value>.w
                
                #line 98
                mov r4.xy, r4.xyxx  // r4.x <- p.w; r4.y <- p.y
                mov r4.x, r4.x  // r4.x <- glow
                mul r0.x, r4.y, l(0.020000)
                add r0.x, r0.x, l(0.400000)
                mov r1.xyzw, l(-1.000000,-0.500000,-0.100000,-1.000000)
                add r1.xyzw, r1.xyzw, l(0.100000, 0.500000, 1.000000, 1.000000)
                mul r0.xyzw, r0.xxxx, r1.xyzw
                add r0.xyzw, r0.xyzw, l(1.000000, 0.500000, 0.100000, 1.000000)  // r0.x <- col.x; r0.y <- col.y; r0.z <- col.z; r0.w <- col.w
                mul r1.x, r4.x, l(2.000000)
                mov r1.y, l(1.000000)
                mul r1.x, r1.x, r1.x
                mul r1.x, r1.x, r1.x
                mul r1.x, r1.x, r1.y
                mov r2.xyzw, l(-0.000000,-0.000000,-0.000000,-0.000000)
                add r0.xyzw, r0.xyzw, r2.xyzw
                mul r0.xyzw, r0.xyzw, r1.xxxx
                add r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // r0.x <- fragColor.x; r0.y <- fragColor.y; r0.z <- fragColor.z; r0.w <- fragColor.w
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 241 instruction slots used
                            
            };
        }

    }

}

